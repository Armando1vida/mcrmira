<?php

/**
 * This is the model base class for the table "ahorro".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Ahorro".
 *
 * Columns in table "ahorro" available as properties of the model,
 * followed by relations of table "ahorro" available as properties of the model.
 *
 * @property integer $id
 * @property integer $socio_id
 * @property string $cantidad
 * @property string $fecha
 * @property string $estado
 * @property string $tipo
 * @property string $saldo_contra
 * @property string $saldo_favor
 *
 * @property AhorroDetalle[] $ahorroDetalles
 */
abstract class BaseAhorro extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'ahorro';
    }

    public static function representingColumn() {
        return 'cantidad';
    }

    public function rules() {
        return array(
            array('socio_id, cantidad, fecha, tipo', 'required'),
            array('socio_id', 'numerical', 'integerOnly'=>true),
            array('cantidad, saldo_contra, saldo_favor', 'length', 'max'=>10),
            array('estado', 'length', 'max'=>6),
            array('tipo', 'length', 'max'=>11),
            array('estado', 'in', 'range' => array('DEUDA','PAGADO')), // enum,
            array('tipo', 'in', 'range' => array('OBLIGATORIO','PRIMER_PAGO')), // enum,
            array('estado, saldo_contra, saldo_favor', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, socio_id, cantidad, fecha, estado, tipo, saldo_contra, saldo_favor', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'ahorroDetalles' => array(self::HAS_MANY, 'AhorroDetalle', 'ahorro_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'socio_id' => Yii::t('app', 'Socio'),
                'cantidad' => Yii::t('app', 'Cantidad'),
                'fecha' => Yii::t('app', 'Fecha'),
                'estado' => Yii::t('app', 'Estado'),
                'tipo' => Yii::t('app', 'Tipo'),
                'saldo_contra' => Yii::t('app', 'Saldo Contra'),
                'saldo_favor' => Yii::t('app', 'Saldo Favor'),
                'ahorroDetalles' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('socio_id', $this->socio_id);
        $criteria->compare('cantidad', $this->cantidad, true);
        $criteria->compare('fecha', $this->fecha, true);
        $criteria->compare('estado', $this->estado, true);
        $criteria->compare('tipo', $this->tipo, true);
        $criteria->compare('saldo_contra', $this->saldo_contra, true);
        $criteria->compare('saldo_favor', $this->saldo_favor, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}