<?php

/**
 * This is the model base class for the table "ahorro_detalle".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AhorroDetalle".
 *
 * Columns in table "ahorro_detalle" available as properties of the model,
 * followed by relations of table "ahorro_detalle" available as properties of the model.
 *
 * @property integer $id
 * @property string $cantidad
 * @property string $fecha
 * @property string $usuario_creacion
 * @property integer $ahorro_id
 *
 * @property Ahorro $ahorro
 */
abstract class BaseAhorroDetalle extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'ahorro_detalle';
    }

    public static function representingColumn() {
        return 'cantidad';
    }

    public function rules() {
        return array(
            array('cantidad, fecha, usuario_creacion, ahorro_id', 'required'),
            array('ahorro_id', 'numerical', 'integerOnly'=>true),
            array('cantidad', 'length', 'max'=>10),
            array('usuario_creacion', 'length', 'max'=>45),
            array('id, cantidad, fecha, usuario_creacion, ahorro_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'ahorro' => array(self::BELONGS_TO, 'Ahorro', 'ahorro_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'cantidad' => Yii::t('app', 'Cantidad'),
                'fecha' => Yii::t('app', 'Fecha'),
                'usuario_creacion' => Yii::t('app', 'Usuario Creacion'),
                'ahorro_id' => Yii::t('app', 'Ahorro'),
                'ahorro' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('cantidad', $this->cantidad, true);
        $criteria->compare('fecha', $this->fecha, true);
        $criteria->compare('usuario_creacion', $this->usuario_creacion, true);
        $criteria->compare('ahorro_id', $this->ahorro_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}