<?php

/**
 * This is the model base class for the table "persona".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Persona".
 *
 * Columns in table "persona" available as properties of the model,
 * followed by relations of table "persona" available as properties of the model.
 *
 * @property integer $id
 * @property string $primer_nombre
 * @property string $segundo_nombre
 * @property string $apellido_paterno
 * @property string $apellido_materno
 * @property string $cedula
 * @property string $ruc
 * @property string $telefono
 * @property string $celular
 * @property string $email
 * @property string $descripcion
 * @property string $tipo
 * @property string $estado
 * @property string $fecha_creacion
 * @property string $fecha_actualizacion
 * @property integer $usuario_creacion_id
 * @property integer $usuario_actualizacion_id
 * @property integer $aprobado
 * @property integer $sucursal_id
 * @property integer $persona_etapa_id
 * @property integer $direccion_domicilio_id
 * @property integer $direccion_negocio_id
 *
 * @property Sucursal $sucursal
 * @property Direccion $direccionDomicilio
 * @property Direccion $direccionNegocio
 * @property PersonaEtapa $personaEtapa
 */
abstract class BasePersona extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'persona';
    }

    public static function representingColumn() {
        return 'primer_nombre';
    }

    public function rules() {
        return array(
            array('primer_nombre, apellido_paterno, cedula, usuario_creacion_id, sucursal_id, persona_etapa_id', 'required'),
            array('usuario_creacion_id, usuario_actualizacion_id, aprobado, sucursal_id, persona_etapa_id, direccion_domicilio_id, direccion_negocio_id', 'numerical', 'integerOnly'=>true),
            array('email', 'email'),
            array('primer_nombre, segundo_nombre, cedula', 'length', 'max'=>20),
            array('apellido_paterno, apellido_materno', 'length', 'max'=>30),
            array('ruc', 'length', 'max'=>13),
            array('telefono, celular', 'length', 'max'=>24),
            array('email', 'length', 'max'=>255),
            array('tipo', 'length', 'max'=>7),
            array('estado', 'length', 'max'=>8),
            array('descripcion, fecha_actualizacion', 'safe'),
            array('tipo', 'in', 'range' => array('CLIENTE','GARANTE')), // enum,
            array('estado', 'in', 'range' => array('ACTIVO','INACTIVO')), // enum,
            array('segundo_nombre, apellido_materno, ruc, telefono, celular, email, descripcion, tipo, estado, fecha_actualizacion, usuario_actualizacion_id, aprobado, direccion_domicilio_id, direccion_negocio_id', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, primer_nombre, segundo_nombre, apellido_paterno, apellido_materno, cedula, ruc, telefono, celular, email, descripcion, tipo, estado, fecha_creacion, fecha_actualizacion, usuario_creacion_id, usuario_actualizacion_id, aprobado, sucursal_id, persona_etapa_id, direccion_domicilio_id, direccion_negocio_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'sucursal' => array(self::BELONGS_TO, 'Sucursal', 'sucursal_id'),
            'direccionDomicilio' => array(self::BELONGS_TO, 'Direccion', 'direccion_domicilio_id'),
            'direccionNegocio' => array(self::BELONGS_TO, 'Direccion', 'direccion_negocio_id'),
            'personaEtapa' => array(self::BELONGS_TO, 'PersonaEtapa', 'persona_etapa_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'primer_nombre' => Yii::t('app', 'Primer Nombre'),
                'segundo_nombre' => Yii::t('app', 'Segundo Nombre'),
                'apellido_paterno' => Yii::t('app', 'Apellido Paterno'),
                'apellido_materno' => Yii::t('app', 'Apellido Materno'),
                'cedula' => Yii::t('app', 'Cédula'),
                'ruc' => Yii::t('app', 'RUC'),
                'telefono' => Yii::t('app', 'Teléfono'),
                'celular' => Yii::t('app', 'Celular'),
                'email' => Yii::t('app', 'E-mail'),
                'descripcion' => Yii::t('app', 'Descripción'),
                'tipo' => Yii::t('app', 'Tipo'),
                'estado' => Yii::t('app', 'Estado'),
                'fecha_creacion' => Yii::t('app', 'Fecha Creación'),
                'fecha_actualizacion' => Yii::t('app', 'Fecha Actualización'),
                'usuario_creacion_id' => Yii::t('app', 'Usuario Creación'),
                'usuario_actualizacion_id' => Yii::t('app', 'Usuario Actualización'),
                'aprobado' => Yii::t('app', 'Aprobado'),
                'sucursal_id' => Yii::t('app', 'Sucursal'),
                'persona_etapa_id' => Yii::t('app', 'Etapa'),
                'direccion_domicilio_id' => Yii::t('app', 'Dirección Domicilio'),
                'direccion_negocio_id' => Yii::t('app', 'Dirección Negocio'),
                'sucursal' => null,
                'direccionDomicilio' => null,
                'direccionNegocio' => null,
                'personaEtapa' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('primer_nombre', $this->primer_nombre, true);
        $criteria->compare('segundo_nombre', $this->segundo_nombre, true);
        $criteria->compare('apellido_paterno', $this->apellido_paterno, true);
        $criteria->compare('apellido_materno', $this->apellido_materno, true);
        $criteria->compare('cedula', $this->cedula, true);
        $criteria->compare('ruc', $this->ruc, true);
        $criteria->compare('telefono', $this->telefono, true);
        $criteria->compare('celular', $this->celular, true);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('descripcion', $this->descripcion, true);
        $criteria->compare('tipo', $this->tipo, true);
        $criteria->compare('estado', $this->estado, true);
        $criteria->compare('fecha_creacion', $this->fecha_creacion, true);
        $criteria->compare('fecha_actualizacion', $this->fecha_actualizacion, true);
        $criteria->compare('usuario_creacion_id', $this->usuario_creacion_id);
        $criteria->compare('usuario_actualizacion_id', $this->usuario_actualizacion_id);
        $criteria->compare('aprobado', $this->aprobado);
        $criteria->compare('sucursal_id', $this->sucursal_id);
        $criteria->compare('persona_etapa_id', $this->persona_etapa_id);
        $criteria->compare('direccion_domicilio_id', $this->direccion_domicilio_id);
        $criteria->compare('direccion_negocio_id', $this->direccion_negocio_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
            'CTimestampBehavior' => array(
                'class' => 'zii.behaviors.CTimestampBehavior',
                'createAttribute' => 'fecha_creacion',
                'updateAttribute' => 'fecha_actualizacion',
                'timestampExpression' => new CDbExpression('NOW()'),
            )
        ), parent::behaviors());
    }
}