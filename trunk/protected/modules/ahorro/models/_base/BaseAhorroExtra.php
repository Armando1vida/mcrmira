<?php

/**
 * This is the model base class for the table "ahorro_extra".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AhorroExtra".
 *
 * Columns in table "ahorro_extra" available as properties of the model,
 * followed by relations of table "ahorro_extra" available as properties of the model.
 *
 * @property integer $id
 * @property string $cantidad
 * @property string $fecha_creacion
 * @property string $anulado
 * @property integer $ahorro_id
 * @property integer $socio_id
 *
 * @property Ahorro $ahorro
 */
abstract class BaseAhorroExtra extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'ahorro_extra';
    }

    public static function representingColumn() {
        return 'cantidad';
    }

    public function rules() {
        return array(
            array('cantidad, ahorro_id, socio_id', 'required'),
            array('ahorro_id, socio_id', 'numerical', 'integerOnly'=>true),
            array('cantidad', 'length', 'max'=>10),
            array('anulado', 'length', 'max'=>2),
            array('anulado', 'in', 'range' => array('SI','NO')), // enum,
            array('anulado', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, cantidad, fecha_creacion, anulado, ahorro_id, socio_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'ahorro' => array(self::BELONGS_TO, 'Ahorro', 'ahorro_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'cantidad' => Yii::t('app', 'Cantidad'),
                'fecha_creacion' => Yii::t('app', 'Fecha Creacion'),
                'anulado' => Yii::t('app', 'Anulado'),
                'ahorro_id' => Yii::t('app', 'Ahorro'),
                'socio_id' => Yii::t('app', 'Socio'),
                'ahorro' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('cantidad', $this->cantidad, true);
        $criteria->compare('fecha_creacion', $this->fecha_creacion, true);
        $criteria->compare('anulado', $this->anulado, true);
        $criteria->compare('ahorro_id', $this->ahorro_id);
        $criteria->compare('socio_id', $this->socio_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
            'CTimestampBehavior' => array(
                'class' => 'zii.behaviors.CTimestampBehavior',
                'createAttribute' => 'fecha_creacion',
                'updateAttribute' => null,
                'timestampExpression' => new CDbExpression('NOW()'),
            )
        ), parent::behaviors());
    }
}